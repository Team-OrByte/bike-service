services:
  bike-service-db:
    image: postgres:15
    container_name: bike_service_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: bikes_db
      POSTGRES_USER: bike_service_user
      POSTGRES_PASSWORD: 1KiHEb8LC0VmvUe
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U bike_service_user -d bikes_db']
      interval: 10s
      timeout: 5s
      retries: 5

  bike-service:
    build: .
    container_name: bike_service
    restart: unless-stopped
    depends_on:
      bike-service-db:
        condition: service_started
      kafka:
        condition: service_started
    ports:
      - '8090:8090'
    volumes:
      - ./Config.toml:/app/Config.toml
      - ./logs:/app/logs
      - ./public.crt:/app/public.crt
    environment:
      BAL_CONFIG_FILES: /app/Config.toml
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8090/bike-service/bikes']
      interval: 30s
      timeout: 10s
      retries: 3
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka_server
    restart: always
    ports:
      - '9094:9094'
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes

volumes:
  pgdata:
  kafka_data:
